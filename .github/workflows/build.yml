name: Build

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      pydantic-version:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          curl -sSL https://install.python-poetry.org | python3 - --version 1.8.3
      - name: Configure poetry
        run: |
          poetry config virtualenvs.create false
      - name: Install dependencies
        run: |
          poetry install --sync --no-interaction
          poetry add pydantic@${{ inputs.pydantic-version }}
          pydantic_version=$(python -c "import pydantic; print(pydantic.__version__)")
          echo "Using pydantic version: ${pydantic_version}"
      - name: Run the code linting
        run: |
          poetry run black --check .
          poetry run isort --check freezeblaster tests
          poetry run mypy freezeblaster
          poetry run pylint --fail-under=9 freezeblaster tests
      - name: Run the unit tests
        run: |
          poetry run pytest -x tests
      - name: Build the library
        run: |
          poetry build
